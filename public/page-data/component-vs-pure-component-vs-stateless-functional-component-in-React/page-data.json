{"componentChunkName":"component---src-templates-blog-post-js","path":"/component-vs-pure-component-vs-stateless-functional-component-in-React/","result":{"data":{"site":{"siteMetadata":{"title":"üßëüèª‚Äçüíª TIL"}},"markdownRemark":{"id":"67bf1d6c-110a-5e73-ad27-8fe4af0fbb09","excerpt":"What is Component? Typical React app will have many of these. Component is a JS class or function that optionally accepts inputs i.e properties(props) & retuns‚Ä¶","html":"<h2>What is Component?</h2>\n<blockquote>\n<p>Typical React app will have many of these. Component is a JS class or function that optionally accepts inputs i.e properties(props) &#x26; retuns a React element that describes how a section of the UI should appear.</p>\n</blockquote>\n<h2>Stateless Functional Component</h2>\n<blockquote>\n<p>It is component that are not using any kind of state, refs,or lifecycle methods.\nIt is state-less &#x26; just a constant function that returns some data\nIn simple words, stateless functional components are just functions that return JSX.</p>\n</blockquote>\n<h2>Pure Components</h2>\n<blockquote>\n<p>Usually, when a component get a new prop into it, React will re-render that component. But sometimes, a component get new props that haven‚Äôt really changed. but React will still trigger a re-render.</p>\n</blockquote>\n<blockquote>\n<p>Using Pure Component will help you prevent this wasted re-render</p>\n</blockquote>","frontmatter":{"title":"Component VS Pure Component VS Stateless Functional Component ‚öôÔ∏è","date":"August 01, 2020","description":"In react there's different between component, pure component, and a stateless functional component."}}},"pageContext":{"slug":"/component-vs-pure-component-vs-stateless-functional-component-in-React/","previous":{"fields":{"slug":"/background-thread-vs-ui-thread/"},"frontmatter":{"title":"Background Thread vs UI Thread üßµ"}},"next":null}},"staticQueryHashes":["1246554614","2819666451","2841359383"]}